{"version":3,"sources":["./src/app/favourite.service.ts","./src/environments/environment.ts","./src/app/cache-interceptor.service.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataFeedItem } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class FavouriteService {\n\n  favouriteData: string[] = [];\n\n  constructor() { }\n\n  populateFavourite(res: DataFeedItem): DataFeedItem {\n    for (var i = 0; i < res.length; i++)\n      res[i].favourite = 'No';\n    return res;\n  }\n\n  checkFavourite(data: DataFeedItem): DataFeedItem{\n    for (var i = 0; i < data.length; i++)\n      this.favouriteData.forEach((fav,index,)=>{if(data[i].ifsc===fav) data[i].favourite=\"Yes\";}); \n    return data;\n  }\n\n  toggleFavouriteService(index: number, data: DataFeedItem){\n    if(this.favouriteData.includes(data[index].ifsc))\n    {\n      data[index].favourite=\"No\";\n      this.favouriteData.splice(this.favouriteData.indexOf(data[index].ifsc),1);\n    }\n    else{\n        this.favouriteData.push(data[index].ifsc);\n        data[index].favourite = \"Yes\";\n    }\n    localStorage.setItem(\"saved_favourites\",JSON.stringify(this.favouriteData));\n    return data;\n  }\n\n  persistToggle(){\n      this.favouriteData = JSON.parse(localStorage.getItem(\"saved_favourites\"));\n      if(this.favouriteData===null){\n        this.favouriteData = [];\n      }\n  } \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  private cache: Map<string, HttpResponse<any>> = new Map()\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.method !== \"GET\") {\n      return next.handle(req)\n    }\n    const cachedResponse: HttpResponse<any> = this.cache.get(req.url)\n    if (cachedResponse) {\n      console.log(\"API-Call: Cached Response\");\n      return of(cachedResponse.clone())\n    } else {\n      return next.handle(req).pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            this.cache.set(req.url, event.clone())\n            console.log(\"API-Call: Server Response\");\n          }\n        })\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nexport interface DataFeedItem extends Array<DataFeedItem> {\n  bank_name: string;\n  bank_id: number;\n  state: string;\n  district: string;\n  city: string;\n  address: string;\n  branch: string;\n  ifsc: string;\n  favourite: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  returnvalue: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getData(city: string) {\n    this.returnvalue = [];\n    let url = \"https://vast-shore-74260.herokuapp.com/banks?city=\" + city;\n    return this.httpClient.get<DataFeedItem>(url);\n  }\n}\n","import { Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFeedItem, DataService } from './data.service';\nimport {FavouriteService} from './favourite.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnChanges,OnInit {\n  title = 'KlaarFinal';\n\n  @ViewChild('paginator') paginator: MatPaginator;\n\n  displayedColumns = ['favourite','bank_name', 'branch', 'city', 'ifsc', 'address', 'district', 'state', 'bank_id'];\n  cityList = ['VISAKHAPATNAM', 'HYDERABAD', 'BANGALORE', 'CHENNAI', 'MYSORE'];\n  dataSource!: MatTableDataSource<any>;\n  dataFeed: any;\n  dataFeedFavourite: any;\n\n  constructor(private service: DataService, private populateService : FavouriteService) { }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.refreshData();\n  }\n\n  fetchData(city: string) {\n    this.service.getData(city).subscribe(Response => {\n      this.dataFeedFavourite = this.populateService.populateFavourite(Response);\n      this.dataFeedFavourite = this.populateService.checkFavourite(this.dataFeedFavourite);\n      this.dataFeed = this.dataFeedFavourite;\n      this.refreshData();\n    });\n  }\n\n  refreshData() {\n    this.dataFeedFavourite = this.populateService.checkFavourite(this.dataFeedFavourite);\n    this.dataSource = new MatTableDataSource(this.dataFeedFavourite);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  filter($event: any) {\n    this.dataSource.filter = $event.target.value;\n  }\n\n  toggleFavourite(index: number){\n    this.dataFeedFavourite  = this.populateService.toggleFavouriteService(index, this.dataFeedFavourite);\n    this.refreshData();\n  }\n\n  ngOnInit(): void {\n      this.populateService.persistToggle();\n  }\n}\n","<h1>Bank Branches</h1>\n\n\n<div class=\"container\">\n\n  <mat-form-field id=\"bloc1\" >\n    <mat-label>Select City</mat-label>\n    <mat-select (selectionChange)='fetchData($event.value)' (opened)=\"fetchData($event.value)\">\n      <!-- <mat-option disabled=\"true\">Select city</mat-option> -->\n      <mat-option [value]=\"city\" *ngFor=\"let city of cityList\">{{city}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field id=\"bloc2\">\n    <input id=\"bloc2\" matInput placeholder=\"Search\" (keyup)=\"filter($event)\">\n\n  </mat-form-field>\n\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n\n    <ng-container matColumnDef=\"favourite\">\n      <th mat-header-cell *matHeaderCellDef id=\"first\"> Favourite  </th>\n      <!-- <td mat-cell *matCellDef=\"let item\"> {{item.favourite}} </td> -->\n      <td  mat-cell *matCellDef=\"let item, let i = index\">\n        <button mat-icon-button (click)=\"toggleFavourite(i)\">\n          <mat-icon *ngIf=\"item.favourite==='Yes'\">grade</mat-icon>\n          <mat-icon *ngIf=\"item.favourite==='No'\">star_border</mat-icon>\n        </button>\n      </td>\n    \n    </ng-container>\n\n    <ng-container matColumnDef=\"bank_name\">\n      <th mat-header-cell *matHeaderCellDef> Bank Name </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.bank_name}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"branch\">\n      <th mat-header-cell *matHeaderCellDef> Branch </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.branch}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"city\">\n      <th mat-header-cell *matHeaderCellDef> City </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.city}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ifsc\">\n      <th mat-header-cell *matHeaderCellDef> IFSC </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.ifsc}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"address\">\n      <th mat-header-cell *matHeaderCellDef> Address </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.address}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"district\">\n      <th mat-header-cell *matHeaderCellDef> District </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.district}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"state\">\n      <th mat-header-cell *matHeaderCellDef> State </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.state}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"bank_id\">\n      <th mat-header-cell *matHeaderCellDef id=\"last\"> Bank Id </th>\n      <td mat-cell *matCellDef=\"let item\"> {{item.bank_id}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator [pageSizeOptions]=\"[5, 10, 15,25, 50, 100]\" aria-label=\"Select page\">\n  </mat-paginator>\n\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input'\nimport { CacheInterceptorService } from './cache-interceptor.service';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CacheInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}